name: Go

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go mod tidy && go mod download

    - name: Build
      run: |
        export CGO_ENABLED=0
        go build -ldflags '-w' \
         -ldflags="-X main.BuildVersion=${{ github.ref }} \
         -X main.GitCommit=${{ github.sha }}" \
         -o bin/azr-replace \
         .

        export GOOS=windows
        go build -ldflags '-w' \
         -ldflags="-X main.BuildVersion=${{ github.ref }} \
         -X main.GitCommit=${{ github.sha }}" \
         -o bin/azr-replace.exe \
         .

        export GOOS=darwin
        go build -ldflags '-w' \
         -ldflags="-X main.BuildVersion=${{ github.ref }} \
         -X main.GitCommit=${{ github.sha }}" \
         -o bin/azr-replace_darwin \
         .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./bin/azr-replace
        asset_name: azr-replace
        asset_content_type: application/octet-stream

    - name: Upload Release Asset for windows
      id: upload-release-asset-windows 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./bin/azr-replace.exe
        asset_name: azr-replace.exe
        asset_content_type: application/octet-stream

    - name: Upload Release Asset for mac
      id: upload-release-asset-mac
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./bin/azr-replace_darwin
        asset_name: azr-replace_darwin
        asset_content_type: application/octet-stream